name: Supabase Migrate

on:
  push:
    branches: [ master ]
    paths:
      - 'supabase/migrations/**.sql'
  workflow_dispatch:

jobs:
  migrate:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install PostgreSQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: Apply migrations via psql (when SUPABASE_DB_URL is provided)
        if: ${{ env.SUPABASE_DB_URL != '' }}
        run: |
          set -e
          for f in supabase/migrations/*.sql; do
            echo "Applying $f"
            psql "$SUPABASE_DB_URL" -v ON_ERROR_STOP=1 -f "$f"
          done
          echo "Migrations applied successfully via psql."
          echo "Verifying user_invoice_profiles exists..."
          psql "$SUPABASE_DB_URL" -v ON_ERROR_STOP=1 -c "select to_regclass('public.user_invoice_profiles');"

      - name: Setup Supabase CLI (fallback)
        if: ${{ env.SUPABASE_DB_URL == '' && env.SUPABASE_ACCESS_TOKEN != '' && env.SUPABASE_PROJECT_REF != '' }}
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Apply migrations via Supabase CLI (fallback)
        if: ${{ env.SUPABASE_DB_URL == '' && env.SUPABASE_ACCESS_TOKEN != '' && env.SUPABASE_PROJECT_REF != '' }}
        run: |
          set -e
          supabase link --project-ref "$SUPABASE_PROJECT_REF"
          supabase db push
          echo "Migrations applied successfully via Supabase CLI."
          echo "Verifying user_invoice_profiles exists..."
          supabase db remote commit --dry-run || true

      - name: Fail if no credentials provided
        if: ${{ env.SUPABASE_DB_URL == '' && (env.SUPABASE_ACCESS_TOKEN == '' || env.SUPABASE_PROJECT_REF == '') }}
        run: |
          echo "::error::Provide SUPABASE_DB_URL or (SUPABASE_ACCESS_TOKEN and SUPABASE_PROJECT_REF) in repo secrets."
          exit 1

